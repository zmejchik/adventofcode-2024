// https://adventofcode.com/2024/day/8

const main = (
  input = puzzleInput
    .split("\n")
    .map((line, y) => line.split("").map((freq, x) => ({ freq, x, y }))),
  nodes = input.flat().filter((n) => n.freq !== "."),

  // combine [1,2,3] -> [ [ 1, 2 ], [ 1, 3 ], [ 2, 1 ], [ 3, 1 ], [ 2, 3 ], [ 3, 2 ] ]
  combine = ([a, ...rest]) => [
    ...rest.map((b) => [a, b]),
    ...rest.map((b) => [b, a]),
    ...(rest.length > 1 ? combine(rest) : []),
  ],

  antinodePositions = (startExtendAntinodes = 2, maxExtendAntinodes = 1) =>
    Object.values(Object.groupBy(nodes, (n) => n.freq))
      .map(combine)
      .flat()
      .map(([a, b]) =>
        // not optimal but simple: we generate lots of out-of-map positions
        range(maxExtendAntinodes, startExtendAntinodes).map((i) => ({
          x: b.x + (a.x - b.x) * i,
          y: b.y + (a.y - b.y) * i,
        }))
      )
      .flat()
      .map(({ x, y }) => input[y]?.[x])
      .filter((n) => n)
) => ({
  p1: new Set(antinodePositions(2, 1)).size,
  p2: new Set(antinodePositions(1, input.length)).size,
});

// utils and hacks

const range = (count, start = 0) =>
  [...Array(count).keys()].map((x) => x + start);

// inputs

const puzzleInputSAMPLE = `
  ............
  ........0...
  .....0......
  .......0....
  ....0.......
  ......A.....
  ............
  ............
  ........A...
  .........A..
  ............
  ............`.trim();

const puzzleInput = `
  ..........................4..............7..q.....
  ..........G..42.f......K.........7................
  D.t...S......A....................................
  ..K.................................I.............
  G....D...f.tA..H.S..........o................N....
  t....f..............4..A........B.........N.....q.
  ...b...k....f..h..........6.......................
  ..........b....m................7...............Q.
  ....h....G.2........K.i...........................
  .F...2.....D....H..6..o........I..................
  k.......b..................K......I.....e.....B...
  .............Sp..o....n....R.............N........
  F............d................2...................
  .........i........................................
  .....ma.....d......p.Q..n.....7....9..........N...
  ......m..H......S...8......n.....Q...e............
  .i..............8......O.....I................c...
  ..d......k....R.....................9....z........
  ..p.......m......n...............P................
  .......pLb...................W..j................q
  .....C..1..........u.....c.....jO...Z..o.........V
  ..C.....i........X1......9......e....j.....B....c.
  ......................9...........Q..Z............
  .d....h..L...............8........O...............
  ....C....r..L....R...............6................
  ...........h.............1.t......P.......V.......
  .......L.1........................................
  ..................................................
  X.......................................V.....W...
  rx........a.X.......0....l..........6.........z...
  ..r........a.8.................................z..
  ................w.........l..............P....A...
  ..........E....s..w.j........l...............W....
  ...v...............c..............W..y...V.O......
  .....X..g.Y...0w......l...................u.......
  .C.......Y...0....................................
  ...g..UJ...0........v.............................
  .U...aY...........................................
  ....5........Y....MUJ..........B..................
  .......g...5M........J.......w.........u..Z.......
  ................TE................................
  ..U....r....5.................J..........Z........
  .......5...3......s........T......................
  .............E.T..............................u...
  ...........v........y.......................P.....
  ................s.................................
  x............M3........e..........................
  ........3...v......MT.............................
  .............x....................................
  ....x..........3............y.....................
  `.trim();

require("util").inspect.defaultOptions.depth = null;
console.log(main());
